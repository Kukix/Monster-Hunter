<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="MonsterFeastClient.Lobby"
        Title="MonsterFeast | Lobby" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" BorderBrush="Black" BorderThickness="1" Background="#FF262626" WindowStyle="None" WindowState="Maximized" Height="768" Width="1024" Loaded="Window_Loaded" Closing="Window_Closing" Closed="Window_Closed">
    <Window.Resources>
        <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<Rectangle x:Name="rectangle" Fill="#FFE2413E"/>
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsFocused" Value="True"/>
        					<Trigger Property="IsDefaulted" Value="True"/>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter Property="Fill" TargetName="rectangle" Value="#FFF1514E"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="Fill" TargetName="rectangle" Value="#FF87201E"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="False"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="AbilityLabelStyle" TargetType="{x:Type Label}">
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Padding" Value="5"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="VerticalContentAlignment" Value="Top"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Label}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="FocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="UpgradeBtnStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="100" Padding="0,0,0,5">
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5.843,-2.011,5.843,-0.508" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="+"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Background" TargetName="border" Value="#FFE2413E"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFE2413E"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Background" TargetName="border" Value="#FFB62523"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="#FF0E0E0E"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
        						<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
        <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBoxBase}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="0">
        					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Template="{DynamicResource ChatScrollViewerControlStyle}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true"/>
        					<Trigger Property="IsKeyboardFocused" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFC12825"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
        				<Condition Property="IsSelectionActive" Value="false"/>
        			</MultiTrigger.Conditions>
        			<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
        		</MultiTrigger>
        	</Style.Triggers>
        </Style>
        <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
        	<Setter Property="TextDecorations" Value="Underline"/>
        	<Style.Triggers>
        		<Trigger Property="IsMouseOver" Value="true">
        			<Setter Property="Foreground" Value="Red"/>
        		</Trigger>
        		<Trigger Property="IsEnabled" Value="false">
        			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        		</Trigger>
        		<Trigger Property="IsEnabled" Value="true">
        			<Setter Property="Cursor" Value="Hand"/>
        		</Trigger>
        	</Style.Triggers>
        </Style>
        <Style x:Key="ChatBoxStyle" TargetType="{x:Type RichTextBox}">
        	<Style.Resources>
        		<Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
        			<Setter Property="OverridesDefaultStyle" Value="true"/>
        		</Style>
        		<Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
        			<Style.Triggers>
        				<Trigger Property="IsMouseOver" Value="true">
        					<Setter Property="Foreground" Value="Blue"/>
        				</Trigger>
        				<Trigger Property="IsEnabled" Value="false">
        					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        				</Trigger>
        			</Style.Triggers>
        		</Style>
        	</Style.Resources>
        	<Setter Property="MinWidth" Value="10"/>
        	<Style.BasedOn>
        		<StaticResource ResourceKey="{x:Type TextBoxBase}"/>
        	</Style.BasedOn>
        </Style>
        <ControlTemplate x:Key="ChatScrollViewerControlStyle" TargetType="{x:Type ScrollViewer}">
        	<Grid x:Name="Grid" Background="{TemplateBinding Background}">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition Width="Auto"/>
        		</Grid.ColumnDefinitions>
        		<Grid.RowDefinitions>
        			<RowDefinition Height="*"/>
        			<RowDefinition Height="Auto"/>
        		</Grid.RowDefinitions>
        		<Rectangle x:Name="Corner" Grid.Column="1" Fill="#FFE2413E" Grid.Row="1"/>
        		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
        		<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" MinWidth="15" Width="10" Style="{DynamicResource ChatSrollbarStyle}" Padding="0" Margin="0,0,5,0" Background="{x:Null}"/>
        		<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        	</Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type RepeatButton}">
        				<Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        						<Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type RepeatButton}">
        				<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Thumb}">
        				<Rectangle x:Name="rectangle" Fill="#FF555555" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" RadiusX="2.5" RadiusY="2.5"/>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Fill" TargetName="rectangle" Value="#FFE2413E"/>
        						<Setter Property="StrokeThickness" TargetName="rectangle" Value="0"/>
        					</Trigger>
        					<Trigger Property="IsDragging" Value="true">
        						<Setter Property="Fill" TargetName="rectangle" Value="#FFC12825"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Thumb}">
        				<Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
        					</Trigger>
        					<Trigger Property="IsDragging" Value="true">
        						<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ChatSrollbarStyle" TargetType="{x:Type ScrollBar}">
        	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        	<Setter Property="Background" Value="#FF262626"/>
        	<Setter Property="BorderBrush" Value="#FF232323"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1,0"/>
        	<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        	<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ScrollBar}">
        				<Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{x:Null}">
        					<Grid.RowDefinitions>
        						<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
        						<RowDefinition Height="0.00001*"/>
        						<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
        					</Grid.RowDefinitions>
        					<Border BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="10"/>
        					<RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Visibility="Collapsed">
        						<Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
        					</RepeatButton>
        					<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" OpacityMask="{x:Null}" Margin="0,5,0,0" Height="Auto">
        						<Track.DecreaseRepeatButton>
        							<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
        						</Track.DecreaseRepeatButton>
        						<Track.IncreaseRepeatButton>
        							<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" Foreground="{x:Null}"/>
        						</Track.IncreaseRepeatButton>
        						<Track.Thumb>
        							<Thumb Style="{StaticResource ScrollBarThumbVertical}" Width="8" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,5" FontSize="13.333"/>
        						</Track.Thumb>
        					</Track>
        					<RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Visibility="Collapsed">
        						<Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
        					</RepeatButton>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
        							<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
        							<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
        							<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
        							<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
        					</MultiDataTrigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
        						<Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="Padding" Value="0"/>
        	<Style.Triggers>
        		<Trigger Property="Orientation" Value="Horizontal">
        			<Setter Property="Width" Value="Auto"/>
        			<Setter Property="MinWidth" Value="0"/>
        			<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        			<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        			<Setter Property="BorderThickness" Value="0,1"/>
        			<Setter Property="Template">
        				<Setter.Value>
        					<ControlTemplate TargetType="{x:Type ScrollBar}">
        						<Grid x:Name="Bg" SnapsToDevicePixels="true">
        							<Grid.ColumnDefinitions>
        								<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
        								<ColumnDefinition Width="0.00001*"/>
        								<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
        							</Grid.ColumnDefinitions>
        							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
        							<RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
        								<Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
        							</RepeatButton>
        							<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
        								<Track.DecreaseRepeatButton>
        									<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
        								</Track.DecreaseRepeatButton>
        								<Track.IncreaseRepeatButton>
        									<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
        								</Track.IncreaseRepeatButton>
        								<Track.Thumb>
        									<Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
        								</Track.Thumb>
        							</Track>
        							<RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
        								<Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
        							</RepeatButton>
        						</Grid>
        						<ControlTemplate.Triggers>
        							<MultiDataTrigger>
        								<MultiDataTrigger.Conditions>
        									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
        									<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
        								</MultiDataTrigger.Conditions>
        								<Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
        							</MultiDataTrigger>
        							<MultiDataTrigger>
        								<MultiDataTrigger.Conditions>
        									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
        									<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
        								</MultiDataTrigger.Conditions>
        								<Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
        							</MultiDataTrigger>
        							<MultiDataTrigger>
        								<MultiDataTrigger.Conditions>
        									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
        									<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
        								</MultiDataTrigger.Conditions>
        								<Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
        							</MultiDataTrigger>
        							<MultiDataTrigger>
        								<MultiDataTrigger.Conditions>
        									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
        									<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
        								</MultiDataTrigger.Conditions>
        								<Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
        							</MultiDataTrigger>
        							<Trigger Property="IsEnabled" Value="false">
        								<Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
        								<Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
        							</Trigger>
        						</ControlTemplate.Triggers>
        					</ControlTemplate>
        				</Setter.Value>
        			</Setter>
        		</Trigger>
        	</Style.Triggers>
        </Style>
        <Style x:Key="SendBtnStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="#FF262626"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFE2413E"/>
        						<Setter Property="Background" TargetName="border" Value="#FFCD4643"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Background" TargetName="border" Value="#FFBB2825"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFDF514E"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
        						<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ChatTbStyle" TargetType="{x:Type TextBox}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBox}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
        					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Opacity" TargetName="border" Value="0.56"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFE2413E"/>
        					</Trigger>
        					<Trigger Property="IsKeyboardFocused" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFE2413E"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
        				<Condition Property="IsSelectionActive" Value="false"/>
        			</MultiTrigger.Conditions>
        			<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
        		</MultiTrigger>
        	</Style.Triggers>
        </Style>
        <Style x:Key="FindBtnStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Background" TargetName="border" Value="#FFDE4F4C"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFDE4F4C"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Background" TargetName="border" Value="#FFB62A27"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="#FFB62A27"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
        						<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="lbOnlineStyle" TargetType="{x:Type ListBox}">
        	<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBox}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
        					<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
        						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</ScrollViewer>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
        					</Trigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsGrouping" Value="true"/>
        							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        					</MultiTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </Window.Resources>

	<Grid x:Name="LayoutRoot">
		<Grid.RowDefinitions>
			<RowDefinition Height="30"/>
			<RowDefinition/>
		</Grid.RowDefinitions>

		<Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Black">
			<Rectangle x:Name="titleRectangle" Fill="#FF333333" Stretch="UniformToFill"/>
		</Border>
        
		<Grid Grid.Row="1" Margin="0, 50,0,0" HorizontalAlignment="Center">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
            
			<!-- Left Side -->
            <Grid Grid.Column="0" Width="500" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="200" Height="auto"/>
                    <RowDefinition MinHeight="200" Height="auto"/>
                    <RowDefinition MinHeight="200" Height="auto"/>
                </Grid.RowDefinitions>
                
                <Grid Grid.Row="1" Height="180" Margin="0,0,0,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="280"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Online Players -->
                    <Grid Grid.Column="0">
                        <!-- Title Bar -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!-- Content -->
                        <Grid Grid.Row="1" Width="auto" Margin="0,-26,0,0" >
                            <Border Background="#FF333333" BorderThickness="1" BorderBrush="#FF1F1F1F">
                                <Grid Height="auto" Margin="0,0,0,0">
                                    <Grid Height="auto" VerticalAlignment="Bottom" Margin="25,35,25,10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>

                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <ListBox x:Name="lbOnline" Height="125" Margin="0,0,0,5" VerticalAlignment="Bottom" Padding="0" Background="{x:Null}" Width="250" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource lbOnlineStyle}"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <Grid Grid.Row="0">
                            <Image Source="Resources/Lobby/info.png" d:IsHidden="True"/>
                            <TextBlock Margin="0" TextWrapping="Wrap" Text="Online" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="50,25" FontSize="16" FontFamily="Manteka">
                                <TextBlock.Background>
                                    <ImageBrush ImageSource="Resources/Lobby/titlebar.png"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </Grid>
                    </Grid>
                    <!-- Rooms -->
                    <Grid Grid.Column="1" Margin="20,0,0,0">
                        <!-- Title Bar -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!-- Content -->
                        <Grid Grid.Row="1" Width="auto" Margin="0,-26,0,0" >
                            <Border Background="#FF333333" BorderThickness="1" BorderBrush="#FF1F1F1F">
                                <Grid Height="auto" Margin="0,0,0,0">
                                    <ListBox x:Name="lbRooms" Height="125" Margin="0,0,0,5" VerticalAlignment="Bottom" Padding="0" Background="{x:Null}" Width="250" BorderBrush="{x:Null}" Foreground="White" Style="{DynamicResource lbOnlineStyle}"/>
                                    <Grid Height="auto" VerticalAlignment="Bottom" Margin="25,35,25,10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>

                                        </Grid.RowDefinitions>

                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                        <Grid Grid.Row="0">
                            <Image Source="Resources/Lobby/info.png" d:IsHidden="True"/>
                            <TextBlock Margin="0" TextWrapping="Wrap" Text="Rooms" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="50,25" FontSize="16" FontFamily="Manteka">
                                <TextBlock.Background>
                                    <ImageBrush ImageSource="Resources/Lobby/titlebar.png"/>
                                </TextBlock.Background>
                            </TextBlock>
                        </Grid>
                    </Grid>
                </Grid>
                
                <!-- Chatbox -->
                <Grid x:Name="GridChat" Grid.Row="0" Margin="0,0,0,25">
                    <!-- Title Bar -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!-- Content -->
                    <Grid Grid.Row="1" Width="auto" Margin="0,-26,0,0" >
                        <Border Background="#FF333333" BorderThickness="1" BorderBrush="#FF1F1F1F">
                            <Grid Height="auto" Margin="0,0,0,0">
                                <Grid Height="auto" VerticalAlignment="Bottom" Margin="25,35,25,10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <RichTextBox x:Name="rbChat" HorizontalAlignment="Left" Height="200" Margin="0,0,0,5" VerticalAlignment="Top" Grid.RowSpan="2" Background="#FF262626" BorderBrush="#FF252525" Foreground="White" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" FontFamily="Roboto" FontSize="13.333" FontWeight="Light" Style="{DynamicResource ChatBoxStyle}" SelectionBrush="#FFE2413E" Padding="10,20,0,0" Cursor="Arrow" IsReadOnlyCaretVisible="True" IsReadOnly="True"/>
                                    <DockPanel HorizontalAlignment="Left" LastChildFill="False" Margin="0,10,0,5" Grid.Row="6" VerticalAlignment="Top">
                                    	<TextBox x:Name="tbSend" HorizontalAlignment="Left" Height="30" TextWrapping="Wrap" Text="Send your message" VerticalAlignment="Center" Width="390" FontFamily="Roboto" Foreground="White" Background="#FF262626" BorderBrush="#FF252525" SelectionBrush="#FFE2413E" VerticalContentAlignment="Center" Padding="5,0,0,0" FontWeight="Light" Margin="0,0,8,0" Style="{DynamicResource ChatTbStyle}" GotFocus="tbSend_GotFocus" LostFocus="tbSend_LostFocus"/>
                                    	<Button x:Name="btnSend" Content="Send" HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="50" DockPanel.Dock="Right" Background="#FFE2413E" BorderBrush="#FF262626" Foreground="White" FontFamily="Roboto" FontWeight="Light" Style="{DynamicResource SendBtnStyle}" Click="btnSend_Click"/>
                                    </DockPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <Grid Grid.Row="0">
                        <TextBlock Margin="0" TextWrapping="Wrap" Text="Chat" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="50,25" FontSize="16" FontFamily="Manteka">
                            <TextBlock.Background>
                                <ImageBrush ImageSource="Resources/Lobby/titlebar.png"/>
                            </TextBlock.Background>
                        </TextBlock>
                    </Grid>
                </Grid>
                <Button x:Name="btnFind" Content="Find Match" HorizontalAlignment="Center" Height="43" Margin="0" Grid.Row="2" VerticalAlignment="Top" Background="#FFE2413E" BorderBrush="#FF333333" Foreground="White" FontFamily="Manteka" FontSize="16" Padding="25,1" Style="{DynamicResource FindBtnStyle}" Click="btnFind_Click"/>
            </Grid>

            <!-- Right Side -->
			<Grid Grid.Column="1" Width="300" Margin="25,0,0,0">
				<Grid.RowDefinitions>
					<RowDefinition MinHeight="200" Height="auto"/>
					<RowDefinition MinHeight="200" Height="auto"/>
				</Grid.RowDefinitions>
                
				<!-- Player Info -->
				<Grid x:Name="GridPlayer" Grid.Row="0" Margin="0,0,0,25">
					<!-- Title Bar -->
					<Grid.RowDefinitions>
						<RowDefinition Height="50"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<!-- Content -->
					<Grid Grid.Row="1" Width="auto" Margin="0,-26,0,0" >
						<Border Background="#FF333333" BorderThickness="1" BorderBrush="#FF1F1F1F">
							<Grid Height="auto" Margin="0,0,0,0">
								<Grid Height="auto" VerticalAlignment="Bottom" Margin="25,35,25,10">
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
										<RowDefinition/>
									
									</Grid.RowDefinitions>
									<DockPanel Grid.Row="0" >
										<Button Style="{DynamicResource UpgradeBtnStyle}" Width="25" Height="25" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" FontSize="16" Foreground="White" Background="#FF333333" BorderBrush="#FFE2413E" UseLayoutRounding="False" Content="Create" Margin="0,1.291" DockPanel.Dock="Top" Visibility="Collapsed"/>
										<Label x:Name="lbWin" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="0" DockPanel.Dock="Right"/>
										<Label Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Wins:" DockPanel.Dock="Right"/>
										<Label x:Name="lbName" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Player Name's" DockPanel.Dock="Right"/>
									</DockPanel>
                                    <DockPanel Grid.Row="1" Margin="0,-10,0,0" >
                                        <Label x:Name="lbExp" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="5555 Exp" DockPanel.Dock="Right"/>
                                        <Label x:Name="lbLvl"  Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Level 1" DockPanel.Dock="Right"/>
                                    </DockPanel>
                                </Grid>
							</Grid>
						</Border>
					</Grid>
					<Grid Grid.Row="0">
						<Image Source="Resources/Lobby/info.png" d:IsHidden="True"/>
						<TextBlock Margin="0" TextWrapping="Wrap" Text="Player" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="50,25" FontSize="16" FontFamily="Manteka">
							<TextBlock.Background>
								<ImageBrush ImageSource="Resources/Lobby/titlebar.png"/>
							</TextBlock.Background>
						</TextBlock>
					</Grid>
				</Grid>
                
				<!-- Char Info -->
				<Grid x:Name="GridInfo" Grid.Row="1">
					<Grid.RowDefinitions>
						<RowDefinition Height="50"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<!-- Title Bar -->
					<!-- Content -->
					<Grid Grid.Row="1" Width="auto" Margin="0,-25,0,0" >
						<Border Background="#FF333333" BorderThickness="1" BorderBrush="#FF1F1F1F">
							<Grid Height="auto" Margin="0,0,0,0">
								<Grid Height="auto" VerticalAlignment="Top" Margin="25,35,25,0">
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
										<RowDefinition/>
										<RowDefinition/>
										<RowDefinition/>
										<RowDefinition/>
										<RowDefinition/>
                                        <RowDefinition/>
									</Grid.RowDefinitions>
									<DockPanel Grid.Row="0" >
										<Button x:Name="btnStrength" Style="{DynamicResource UpgradeBtnStyle}" Width="25" Height="25" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" FontSize="16" Foreground="White" Background="#FF333333" BorderBrush="#FFE2413E" UseLayoutRounding="False" Content="Create" Margin="0,1.291" Click="btnStrength_Click"/>
										<Label Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Strength :"/>
										<Label x:Name="lbStrength" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="50" DockPanel.Dock="Right" FlowDirection="RightToLeft" Padding="0,5"/>
									</DockPanel>
									<DockPanel Grid.Row="1" >
										<Button x:Name="btnConstitution" Style="{DynamicResource UpgradeBtnStyle}" Width="25" Height="25" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" FontSize="16" Foreground="White" Background="#FF333333" BorderBrush="#FFE2413E" UseLayoutRounding="False" Content="Create" Margin="0,1.291" Click="btnConstitution_Click"/>
										<Label Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Constitution :"/>
										<Label x:Name="lbConstitution" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="50" DockPanel.Dock="Right" FlowDirection="RightToLeft" Padding="0,5"/>
									</DockPanel>
									<DockPanel Grid.Row="2">
										<Button x:Name="btnMagic" Style="{DynamicResource UpgradeBtnStyle}" Width="25" Height="25" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" FontSize="16" Foreground="White" Background="#FF333333" BorderBrush="#FFE2413E" UseLayoutRounding="False" Content="Create" Margin="0,1.291" Click="btnMagic_Click"/>
										<Label Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Magic :"/>
										<Label x:Name="lbMagic" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="50" DockPanel.Dock="Right" FlowDirection="RightToLeft" Padding="0,5"/>
									</DockPanel>
									<DockPanel Grid.Row="3">
										<Button x:Name="btnWisdom" Style="{DynamicResource UpgradeBtnStyle}" Width="25" Height="25" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" FontSize="16" Foreground="White" Background="#FF333333" BorderBrush="#FFE2413E" UseLayoutRounding="False" Content="Create" Margin="0,1.291" Click="btnWisdom_Click"/>
										<Label Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Wisdom :"/>
										<Label x:Name="lbWisdom" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="50" DockPanel.Dock="Right" FlowDirection="RightToLeft" Padding="0,5"/>
									</DockPanel>
									<DockPanel Grid.Row="4">
										<Button x:Name="btnDexterity" Style="{DynamicResource UpgradeBtnStyle}" Width="25" Height="25" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" FontSize="16" Foreground="White" Background="#FF333333" BorderBrush="#FFE2413E" UseLayoutRounding="False" Content="Create" Margin="0,1.291" Click="btnDexterity_Click"/>
										<Label Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Dexterity :"/>
										<Label x:Name="lbDexterity" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="50" DockPanel.Dock="Right" FlowDirection="RightToLeft" Padding="0,5"/>
									</DockPanel>
									<DockPanel Grid.Row="5" Margin="0,0,0,25">
										<Button x:Name="btnAgility" Style="{DynamicResource UpgradeBtnStyle}" Width="25" Height="25" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Padding="0" FontSize="16" Foreground="White" Background="#FF333333" BorderBrush="#FFE2413E" UseLayoutRounding="False" Content="Create" Margin="0,1.291" Click="btnAgility_Click"/>
										<Label Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="ExtraLight" Content="Agility :"/>
										<Label x:Name="lbAgility" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="50" DockPanel.Dock="Right" FlowDirection="RightToLeft" Padding="0,5"/>
									</DockPanel>
                                    <DockPanel Grid.Row="6" Margin="0,0,0,10">
                                        <Label x:Name="lbSkillPoints" Style="{DynamicResource AbilityLabelStyle}" Foreground="White" FontFamily="Roboto" FontSize="13.333" FontWeight="Bold" Content="50" DockPanel.Dock="Right" FlowDirection="RightToLeft" Padding="0,5"/>
                                    </DockPanel>
                                </Grid>
							</Grid>
						</Border>
					</Grid>
					<Grid Grid.Row="0">
                        <TextBlock Margin="0" TextWrapping="Wrap" Text="Info" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="50,25" FontSize="16" FontFamily="Manteka">
                            <TextBlock.Background>
                                <ImageBrush ImageSource="Resources/Lobby/titlebar.png"/>
                            </TextBlock.Background>
                        </TextBlock>
                    </Grid>
				</Grid>

            </Grid>
		</Grid>

		<Button x:Name="closeBtn" Content="X" HorizontalAlignment="Right" Height="25" Margin="0,0,4,1" Style="{DynamicResource CloseBtnStyle}" VerticalAlignment="Top" Width="50" Click="closeBtn_Click"/>
	</Grid>
</Window>
